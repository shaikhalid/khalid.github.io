{"componentChunkName":"component---src-templates-post-js","path":"/workex/swiftrobotics/","result":{"data":{"mdx":{"frontmatter":{"title":"Software Development Engineer Intern - Robotics","date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Software Development Engineer Intern - Robotics\",\n  \"company\": \"Swift Robotics\",\n  \"company_webiste\": \"https://swiftrobotics.ai/\",\n  \"start_date\": \"2020-06-15\",\n  \"end_date\": \"2021-06-15\",\n  \"publish\": true,\n  \"type\": \"workex\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Implemented ORB-SLAM2 for COVID-19 disinfection robots\"), \", achieving precise navigation in complex settings.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Performed Sensor Fusion\"), \" on Wheel + Visual Odometry and IMU Data, resulting in a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"60% reduction in localization error\"), \" to an average of 7cm after 30 mins of operation in real-world scenarios.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Developed a React Native app\"), \" to control and visualize the robot using the Animated API and implemented state management through Redux.\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/workex/swiftrobotics/"}},"staticQueryHashes":[]}