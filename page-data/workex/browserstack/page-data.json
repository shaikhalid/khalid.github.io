{"componentChunkName":"component---src-templates-post-js","path":"/workex/browserstack/","result":{"data":{"mdx":{"frontmatter":{"title":"Senior Software Development Engineer - Customer Engineering","date":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Senior Software Development Engineer - Customer Engineering\",\n  \"company\": \"BrowserStack\",\n  \"start_date\": \"2021-06-21\",\n  \"end_date\": \"2023-08-09\",\n  \"publish\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Utilized data analytics and machine learning to improve customer experiences and engagement strategies.\"), \" My projects included:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Developing a model to personalize suggestions to improve product adoption.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Segmenting customers for targeted strategies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Creating an automated system that reduced manual feedback analysis by 70%.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Developed workflows to extract key insights related to product usage and adoption\"), \" based on which we generated customized recommendations and tips to customers to improve the user experience. Contributed to 10+ open source repositories showcasing framework integration and feature usage. Enhanced BrowserStack\\u2019s Turboscale grid architecture to support desktop automation testing with Tricentis Tosca.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Skills learned:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React.js\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Machine Learning\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Debugging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API Development\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PyTorch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Cloud Platform (GCP)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Microsoft Azure\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Project Management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Large Language Models (LLM)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PySpark\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Communication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Data Science\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/workex/browserstack/"}},"staticQueryHashes":[]}